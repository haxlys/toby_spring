일반적으로 개발자는 자신이 만들고 있는 코드에 대한 테스트만 작성하면 된다.
하지만 떄로는 자신이 만들지 않은 프레임워크나 다른 개발팀에서 만들어서 제공한 라이브러리 등에 대해서도 테스트를 작성해야 한다.
이런 테스트를 학습 테스트(leanring test)라고 한다.

학습 테이스트의 목적은 자신이 사용할 API나 프레임워크의 기능을 테스트로 보면서 사용방법을 익히려는 것이다.
따라서 테스트이지만 프레임 워크나 기능에 대한 검증이 목적이 아니다.
오히려 자신이 테스트를 만들려고 하는 기술이나 기능에 대해 얼마나 제대로 이해하고 있는지, 그 사용 방법을 바로 알고 있는지를 검증하려는 게 목적이다.
또, 테스트 코드를 작성해보면서 빠르고 정확하게 사용법을 익히는 것도 학습 테스트를 작성하는 하나의 목적이다.

저자는 새로운 프레임워크를 사용하게 되거나 새로운 기술을 공부할 떄는 항상 테스트 코드를 먼저 만들어본다.
테스트 코드를 만드는 과정을 통해 API의 사용 방법도 익히고 내가 가진 기술에 대한 지식도 검증할 수 있다.
떄로는 어설프게 알고 있거나 오해하고 있던 지식을 테스트를 만드는 고정을 통해 바로 잡기도 한다.
잘못 이해하고 있던 기술의 사용 방법을 테스트로 만들어서 돌려보면 금세 확인되기 떄문이다.
학습 테스트는 테스트 대상보다 테스트 코드 자체에 관심을 갖고 만들어야 한다.

1. 학습 테스트의 장점
	1) 다양한 조건에 따른 기능을 손쉽게 확인해 볼 수 있다.
	2) 학습 테스트 코드를 개발 중에 참고할 수 있다.
	3) 프레임워크나 제품을 업그레이드할 때 호환성 검증을 도와준다.
	4) 테스트 작성에 대한 좋은 훈련이 된다.
	5) 새로운 기술을 공부하는 과정이 즐거워진다.
	
2. 학습 테스트 예제


3. 버그 테스트
버그 테스트란 코드에 올가 있을 때 그 오류를 가장 잘 드러내줄 수 있는 테스트를 말한다.
QA팀의 테스트 중에 기능 오류가 발견됐다고 하자.
또는 사용자가 버그가 있다고 알려온 경우라고 생각해도 좋다.
이때 무턱대고 코드를 뒤져가면서 수정하려고 하기보다는 먼저 버그 테스트를 만들어두는 편이 유용하다.

버그 테스트는 일단 실패하도록 만들어야 한다.
버그가 원인이 되서 테스트가 실패하는 코드를 만드는 것이다.
그러고 나서 버그 테스트가 성공할 수 있도록 애플리케이션 코드를 수정한다.
테스트가 성공하면 버그는 해결된 것이다.
버그 테스트의 필요성과 장점
	1) 테스트의 완성도를 높여준다.
	2) 버그의 내용을 명확하게 분석해 준다.
	3) 기술적인 문제를 해결하는 데 도움이 된다.